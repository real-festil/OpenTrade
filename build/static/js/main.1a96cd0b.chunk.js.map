{"version":3,"sources":["components/ui/button/button.module.css","components/ui/treeview/treeview.module.css","images/bell.svg","images/settings.svg","components/ui/loginInput/input.module.css","components/ui/input/input.module.css","components/editors/algoEditor/algoEditor.module.css","components/ui/backdrop/backdrop.module.css","components/ui/sidedrawer/sidedrawer.module.css","images/editor.svg","images/dash.svg","images/shield.svg","images/arrow.svg","images/wand.svg","images/lock.svg","images/cross.svg","components/changePassword/changePassword.module.css","components/ui/header/header.module.css","components/placeOrder/Forms/Manual/manual.module.css","components/grids/overview/overview.module.css","components/layout/layout.js","components/ui/button/button.js","components/ui/backdrop/backdrop.js","components/changePassword/changePassword.js","components/ui/select/select.js","components/ui/input/input.js","components/placeOrder/Forms/Manual/manual.js","components/placeOrder/Forms/AplhaExample/alphaExample.js","components/placeOrder/Forms/TWAP/twap.js","components/placeOrder/Forms/TwapPy/twapPy.js","components/placeOrder/Forms/MACrossing/macrossing.js","components/placeOrder/placeOrder.js","components/ui/treeview/treeview.js","components/editors/algoEditor/algoEditor.js","components/editors/riskEditor/riskEditor.js","components/ui/iconSelect/iconSelect.js","components/ui/header/header.js","components/ui/sidedrawer/sidedrawer.js","components/grids/overview/overview.js","containers/dashboard/dashboard.js","components/ui/loginInput/input.js","containers/login/login.js","containers/risk/risk.js","App.js","serviceWorker.js","index.js","containers/dashboard/dashboard.module.css","components/grids/gridLayout/gridLayout.module.css","components/placeOrder/placeOrder.module.css","containers/login/login.module.css","images/man.svg"],"names":["module","exports","Layout","this","props","children","Component","button","btnSelector","className","classes","ButtonDisabled","type","onClick","clicked","style","disabled","caption","Button","onSubmit","submit","backdrop","show","Backdrop","changePassword","state","styles","border","errorMessage","layout","i","x","y","w","h","minW","maxW","Infinity","minH","maxH","onChangePassword","setState","console","log","transform","opacity","zIndex","width","verticalCompact","isResizable","key","Draggable","DraggablePart","src","crossImage","alt","modalClosed","Error","InputPart","Input","placeholder","ButtonPart","select","options","customStyles","container","containerWidth","marginRight","control","provided","isFocused","isSelected","isHovered","height","invalid","borderRadius","transition","backgroundColor","color","fontSize","cursor","padding","display","boxShadow","singleValue","marginBottom","indicatorSeparator","menu","marginLeft","position","background","option","multiValue","alignItems","marginTop","multiValueLabel","multiValueRemove","name","isMulti","classNamePrefix","defaultValue","value","inputValue","onChange","changed","input","required","numberMask","createNumberMask","prefix","suffix","priceMask","allowDecimal","decimalLimit","undefined","selectComponentWrapper","meta","rest","Select","error","touched","security","label","timeInForce","manual","render","handleSubmit","form","submitting","pristine","values","SelectPart","Row","component","validate","WrapTitle","Title","mask","inputClasses","alphaExample","internalCross","agression","twap","twapPy","macrossing","PlaceOrder","onSelectedChange","data","optionRender","placeOrder","draggableHandle","Header","HeaderGroup","treeview","Caption","List","AlgoEditor","debug","filename","files","selectedFile","adding","valueChanged","treeShow","onClicked","onAdding","onCancelAdding","onFileSubmit","arr","push","localStorage","setItem","onAddingChange","e","target","callback","getItem","onChangeSubmit","Promise","resolve","then","result","onChangeRestore","onTreeClicked","onLoad","setTimeout","onFileChanged","Adding","draggableCancel","Wrapper","DraggableWrapper","ContentWrapper","split","initialSize","Tree","map","file","Editor","mode","theme","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","minSize","PureComponent","menuList","menuWidth","group","groupHeading","justifyContent","exchanges","datas","groupedOptions","changeClicked","alertClicked","Left","Sandwich","sidedrawerClicked","Right","Settings","settingsImage","editorImage","algoClicked","bellImage","Sidedrawer","opened","visible","showSidedrawer","userClicked","themeClicked","openHandler","window","dispatchEvent","Event","userHandler","themeHandler","visibleHandler","to","textDecoration","ButtonWrapperOpen","ButtonWrapper","dashImage","shieldImage","ControlWrapper","manImage","margin","Control","wandImage","Expand","arrowImage","defaultColumnProperties","resizable","defaultRowProperties","columns","c","rows","Acc","State","Time0","Time","Bought","Working","Position","Sold","Desire","Desc","r","onWidthChanged","overview","rowGetter","rowsCount","rowHeight","minHeight","defaultCellContentRenderer","valueCellContentRenderer","GridLayout","WidthProvider","RGL","Dashboard","showPlaceOrder","showChangePassword","showAlgo","showRisk","placeOrderHandler","changePasswordHandler","algoHandler","riskHandler","showSidedrawerHandler","kek","alert","modalClosedHandler","alertClickedHandler","left","cols","onResizeStop","useCSSTransforms","Placeholder","InputBox","img","Login","username","password","valid","errormessage","userInputHandler","event","buttonClicked","passwordInputHandler","errorHandler","pass","data-theme","dataTheme","YellowText","lockImage","Risk","App","isLogged","onLoginPass","onLogout","JSON","parse","login","redirect","path","exact","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,KAAM,aAC9L,CAACT,IAAK,YAAaC,MAAO,YAAaC,MAAO,YAAaC,KAAM,YAAaC,OAAQ,YAAaC,QAAS,YAAaC,SAAU,Y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","file":"static/js/main.1a96cd0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__1etqY\",\"ButtonDisabled\":\"button_ButtonDisabled__1-2bf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Caption\":\"treeview_Caption__OgGQJ\",\"List\":\"treeview_List__28IE-\"};","module.exports = __webpack_public_path__ + \"static/media/bell.9efa9454.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.040bcb23.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__36OyT\",\"InputBox\":\"input_InputBox__vIDVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__2Ej1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"algoEditor_Wrapper__23BJj\",\"Draggable\":\"algoEditor_Draggable__IHITe\",\"DraggableWrapper\":\"algoEditor_DraggableWrapper__2fZw6\",\"ContentWrapper\":\"algoEditor_ContentWrapper__2AWvt\",\"Tree\":\"algoEditor_Tree__3t0BL\",\"Result\":\"algoEditor_Result__3uuBY\",\"Editor\":\"algoEditor_Editor__JLW0s\",\"Adding\":\"algoEditor_Adding__e8hQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop_Backdrop__2Oooh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidedrawer\":\"sidedrawer_Sidedrawer__W7wSB\",\"ButtonWrapper\":\"sidedrawer_ButtonWrapper__3IHTX\",\"ButtonWrapperOpen\":\"sidedrawer_ButtonWrapperOpen__uKlOV\",\"Caption\":\"sidedrawer_Caption__ETRBF\",\"ControlWrapper\":\"sidedrawer_ControlWrapper__31p3X\",\"Control\":\"sidedrawer_Control__c5dAn\",\"Expand\":\"sidedrawer_Expand__2YJJi\"};","module.exports = __webpack_public_path__ + \"static/media/editor.b2ff3ee3.svg\";","module.exports = __webpack_public_path__ + \"static/media/dash.ebd2d798.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield.2d61e52c.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.738e0b0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/wand.0cc2c52a.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock.62f94555.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.975c33cd.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChangePassword\":\"changePassword_ChangePassword__1Rsss\",\"Draggable\":\"changePassword_Draggable__2ll78\",\"DraggablePart\":\"changePassword_DraggablePart__xEM3x\",\"InputPart\":\"changePassword_InputPart__3Tv7W\",\"Error\":\"changePassword_Error__YQQqE\",\"Input\":\"changePassword_Input__33AkG\",\"ButtonPart\":\"changePassword_ButtonPart__3QSr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"header_Header__3jHIj\",\"Sandwich\":\"header_Sandwich__j_1i3\",\"Left\":\"header_Left__3bkYI\",\"Right\":\"header_Right__KrMK5\",\"Select\":\"header_Select__3QTBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectPart\":\"manual_SelectPart__o7jXr\",\"Error\":\"manual_Error__1k3jK\",\"Input\":\"manual_Input__3z84b\",\"ButtonPart\":\"manual_ButtonPart__2vsQE\",\"HeaderGroup\":\"manual_HeaderGroup__1tALo\",\"Row\":\"manual_Row__3jwga\",\"WrapTitle\":\"manual_WrapTitle__mDr8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Grid\":\"overview_Grid__1bDPo\"};","import React, { Component } from 'react';\r\nimport LoginClasses from '../../containers/login/login.module.css';\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <ThemeSwitcher\r\n                    cssSelector={arr}\r\n                    darkColor=\"#282c34\"\r\n                    lightColor=\"#ffffff\"\r\n                    lightTextColor=\"#272b33\"\r\n                    darkTextColor=\"#ffffff\"/> */}\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './button.module.css';\r\n\r\nconst button = ( props ) => {\r\n        let btnSelector = props.btnSelector;\r\n        if(btnSelector === 'btnDisabled') {\r\n             btnSelector = (<button className={classes.ButtonDisabled}\r\n                                    type={props.type}\r\n                                    onClick={props.clicked}\r\n                                    style={props.style}\r\n                                    disabled={props.disabled}>\r\n                                {props.caption}\r\n                            </button>)\r\n        } else btnSelector =  (<button className={classes.Button}\r\n                                       onClick={props.clicked}\r\n                                       style={props.style}\r\n                                       disabled={props.disabled}\r\n                                       onSubmit={props.submit}>\r\n                                    {props.caption}\r\n                              </button>)\r\n            return (\r\n                <>\r\n                    {btnSelector}\r\n                </>\r\n        );\r\n    }\r\n\r\nexport default button;","import React from 'react';\r\nimport classes from './backdrop.module.css';\r\n\r\nconst backdrop = ( props ) => props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null;\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\nimport classes from './changePassword.module.css';\r\nimport GridLayout from 'react-grid-layout';\r\nimport Button from '../ui/button/button';\r\nimport Backdrop from '../ui/backdrop/backdrop';\r\nimport './changePassword.css';\r\nimport '../placeOrder/Dragging.css';\r\nimport crossImage from '../../images/cross.svg';\r\n\r\nclass changePassword extends Component {\r\n    state = {\r\n        styles : {border: ''},\r\n        errorMessage : ''\r\n    }\r\n\r\n    layout = [\r\n        {i: 'a', x: 5, y: 0, w: 3, h: 2.2, minW: 2.8, maxW: Infinity, minH: 2.1, maxH: Infinity}\r\n    ];\r\n\r\n    onChangePassword = () => {\r\n        this.setState({styles:{border: '1px solid red'}, errorMessage: 'Server unreachable'});\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Backdrop show={this.props.show}/>\r\n            <GridLayout\r\n                className={classes.changePassword}\r\n                layout={this.layout}\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-150vh)',\r\n                    opacity: this.props.show ? '1' : '0',\r\n                    zIndex: '101'\r\n                }}\r\n                width={1200}\r\n                verticalCompact={false}\r\n                isResizable={true}>\r\n                <div key=\"a\" className={classes.Draggable}>\r\n                    <div className={classes.DraggablePart}>\r\n                        <p>Change Password</p>\r\n                        <img src={crossImage} alt='' onClick={this.props.modalClosed}/>\r\n                    </div>\r\n                    <p className={classes.Error}>{this.state.errorMessage}</p>\r\n                    <div className={classes.InputPart}>\r\n\r\n                        <input className={classes.Input} style={this.state.styles} placeholder=\"Change password\"></input>\r\n                        <input className={classes.Input} style={this.state.styles} placeholder=\"New password\"></input>\r\n                        <input className={classes.Input} style={this.state.styles} placeholder=\"New password confirmation\"></input>\r\n                    </div>\r\n\r\n                    <div className={classes.ButtonPart}>\r\n\r\n                        <Button caption=\"Submit\" clicked={this.onChangePassword}/>\r\n                        <Button caption=\"Cancel\" btnSelector=\"btnDisabled\" clicked={this.props.modalClosed}/>\r\n                    </div>\r\n                </div>\r\n            </GridLayout>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default changePassword;","import React, { Component } from 'react';\r\nimport {default as Select} from 'react-select';\r\nimport './Select.css';\r\n\r\nconst select = ( props ) => {\r\n    let options = props.options;\r\n\r\n    const customStyles = {\r\n        container: () => ({\r\n            width: props.containerWidth,\r\n            marginRight: 20\r\n        }),\r\n        control: (provided, {isFocused, isSelected, isHovered}) => ({\r\n            width: props.width,\r\n            height: \"20px\",\r\n            border: isFocused ? \"2px solid #20a8d8\" : props.invalid ? \"2px solid red\" : \"2px solid #37373c\" ,\r\n            borderRadius: \"5px\",\r\n            transition: \"0.2s ease\",\r\n            backgroundColor: \"#202028\",\r\n            color: \"#22ADF6\",\r\n            fontSize: \"12px\",\r\n            cursor: \"pointer\",\r\n            padding: \"5px\",\r\n            display: 'flex',\r\n            boxShadow: isFocused ? \"0px 0px 15px #20a8d8\" : null\r\n        }),\r\n        singleValue: () => ({\r\n            color: \"#22ADF6\",\r\n            marginBottom: 5\r\n        }),\r\n        indicatorSeparator: () => ({\r\n            border: 'none'\r\n        }),\r\n        menu: () => ({\r\n            width: props.containerWidth,\r\n            zIndex: '200',\r\n            marginLeft: 3,\r\n            position: 'absolute',\r\n            color: \"white\",\r\n            background: \"rgb(34,173,246)\",\r\n            background: \"linear-gradient(90deg, rgba(34,173,246,1) 0%, rgba(93,193,246,1) 100%)\"\r\n        }),\r\n        option: () => ({\r\n            color: \"white\",\r\n            height: '20px',\r\n            background: \"rgb(34,173,246)\",\r\n            background: \"linear-gradient(90deg, rgba(34,173,246,1) 0%, rgba(93,193,246,1) 100%)\",\r\n            textAlign: 'left',\r\n            fontSize: 12,\r\n            padding: 5,\r\n            paddingLeft: 14,\r\n            fontWeigt: 'regular '\r\n        }),\r\n        placeholder: () => ({\r\n            color: \"#555555\",\r\n            marginBottom: 5\r\n        }),\r\n        multiValue: () => ({\r\n         border: '1px solid #163c68',\r\n         display: 'flex',\r\n         alignItems: 'center',\r\n         marginRight: 5,\r\n         backgroundColor: \"rgba(0, 126, 255, 0.08)\",\r\n         marginTop: -4.5\r\n        }),\r\n        multiValueLabel: () => ({\r\n         color: '#22ADF6',\r\n         fontSize: 10,\r\n         padding: 2\r\n        }),\r\n        multiValueRemove: (provided, {isFocused, isSelected, isHovered}) => ({\r\n         backgroundColor: isHovered ? \"rgba(0, 126, 255, 0.08)\" : null,\r\n         border: '1px solid #163c68'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Select options={options}\r\n                name={props.name}\r\n                styles={customStyles}\r\n                style={props.style}\r\n                isMulti={props.isMulti}\r\n                className='react-select-container'\r\n                classNamePrefix=\"react-select\"\r\n                defaultValue={props.value}\r\n                placeholder={props.inputValue}\r\n                onChange={props.changed}\r\n                {...select}/>\r\n    )\r\n}\r\n\r\nexport default select;","import React from 'react';\r\nimport classes from './input.module.css';\r\n\r\nconst input = ( props ) => {\r\n    return (\r\n        <input className={classes.Input}\r\n               name={props.name}\r\n               placeholder={props.placeholder}\r\n               defaultValue={props.defaultValue}\r\n               value={props.value}\r\n               onChange={props.changed}\r\n               type={props.type}\r\n               style={props.style}\r\n               required></input>\r\n    )\r\n}\r\n\r\nexport default input;","import React from 'react';\r\nimport Button from '../../../ui/button/button';\r\nimport Input from '../../../ui/input/input';\r\nimport Select from '../../../ui/select/select';\r\nimport classes from './manual.module.css';\r\nimport inputClasses from '../../../ui/input/input.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport MaskedInput from 'react-text-mask';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\r\n\r\nconst onSubmit = (value) => {\r\n    console.log(value)\r\n}\r\n\r\nconst numberMask = createNumberMask({\r\n    prefix: '',\r\n    suffix: ''\r\n})\r\n\r\nconst priceMask = createNumberMask({\r\n    prefix: '$',\r\n    suffix: '',\r\n    allowDecimal: true,\r\n    decimalLimit: 5\r\n})\r\n\r\nconsole.log(priceMask)\r\n\r\nconst required = value => (value ? undefined : 'Required')\r\n\r\nfunction selectComponentWrapper( props ) {\r\n    const {\r\n        input : { name, options, onChange, ...restInput},\r\n        meta,\r\n        ...rest\r\n    } = props;\r\n\r\n    return (<Select {...rest}\r\n                    className={classes.Select}\r\n                    options={props.options}\r\n                    name={props.name}\r\n                    changed={onChange}\r\n                    inputValue={props.inputValue}\r\n                    width={props.width}\r\n                    invalid={meta.error && meta.touched}\r\n                    containerWidth={props.containerWidth} />)\r\n}\r\n\r\nconst security = [\r\n    { value: 'Server unreachable', label: 'Server unreachable'}\r\n];\r\n\r\nconst type = [\r\n    { value: 'Limit', label: 'Limit'},\r\n    { value: 'Market', label: 'Market'},\r\n    { value: 'Shop', label: 'Shop'},\r\n    { value: 'Stop Limit', label: 'Stop Limit'},\r\n    { value: 'OTC', label: 'OTC'}\r\n];\r\n\r\nconst timeInForce = [\r\n    { value: 'Day', label: 'Day'},\r\n    { value: 'IOC', label: 'IOC'},\r\n    { value: 'OPG', label: 'OPG'},\r\n    { value: 'FOK', label: 'FOK'}\r\n]\r\n\r\nconst manual = ( props ) => (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, form, submitting, pristine, values}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                    <div className={classes.SelectPart} >\r\n                        <div className={classes.Row}>\r\n                        <Field name=\"security\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='security'\r\n                                    width='100%'\r\n                                    containerWidth=\"30%\"\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"account\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='account'\r\n                                    width='100%'\r\n                                    containerWidth='30%'\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"side\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='side'\r\n                                    width='100%'\r\n                                    containerWidth=\"20%\"\r\n                                    >\r\n                            </Field>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Type:</p>\r\n                                <Field name=\"type\"\r\n                                    component={selectComponentWrapper}\r\n                                    options={type}\r\n                                    width='340%'\r\n                                    containerWidth=\"25%\"\r\n                                    ></Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>TimeInForce:</p>\r\n                                <Field name=\"timeInForce\"\r\n                                    component={selectComponentWrapper}\r\n                                    options={timeInForce}\r\n                                    width='340%'\r\n                                    containerWidth=\"25%\"\r\n                                    ></Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Quantity:</p>\r\n                                <Field name=\"quantity\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                placeholder='Quantity'\r\n                                                name='quantity'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Price:</p>\r\n                                <Field name=\"Price\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={priceMask}\r\n                                                placeholder='Price'\r\n                                                name='price'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Stop price:</p>\r\n                                <Field name=\"stopPrice\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={priceMask}\r\n                                                placeholder='Stop Price'\r\n                                                name='stopPrice'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonPart}>\r\n                        <Button caption=\"Send\" type=\"submit\"/>\r\n                        <Button caption=\"Close\" btnSelector=\"btnDisabled\" clicked={props.modalClosed}/>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n)\r\n\r\nexport default manual;\r\n","import React from 'react';\r\nimport Button from '../../../ui/button/button';\r\nimport Input from '../../../ui/input/input';\r\nimport Select from '../../../ui/select/select';\r\nimport classes from '../Manual/manual.module.css';\r\nimport inputClasses from '../../../ui/input/input.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport MaskedInput from 'react-text-mask';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\r\n\r\nconst onSubmit = (value) => {\r\n    console.log(value)\r\n}\r\n\r\nconst numberMask = createNumberMask({\r\n    prefix: '',\r\n    suffix: ''\r\n})\r\n\r\nconst required = value => (value ? undefined : 'Required')\r\n\r\nconst security = [\r\n    { value: 'Server unreachable', label: 'Server unreachable'}\r\n];\r\n\r\nfunction selectComponentWrapper( props ) {\r\n    const {\r\n        input : { name, options, onChange, ...restInput},\r\n        meta,\r\n        ...rest\r\n    } = props;\r\n\r\n    return (<Select {...rest}\r\n                    className={classes.Select}\r\n                    options={props.options}\r\n                    name={props.name}\r\n                    changed={onChange}\r\n                    inputValue={props.inputValue}\r\n                    width={props.width}\r\n                    invalid={meta.error && meta.touched}\r\n                    containerWidth={props.containerWidth} />)\r\n}\r\n\r\n\r\nconst alphaExample = ( props ) => (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, form, submitting, pristine, values}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                    <div className={classes.SelectPart} >\r\n                        <div className={classes.Row}>\r\n                            <Field name=\"security\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='security'\r\n                                    width='100%'\r\n                                    containerWidth=\"30%\"\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"account\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='account'\r\n                                    width='100%'\r\n                                    containerWidth='30%'\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"side\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='side'\r\n                                    width='100%'\r\n                                    containerWidth=\"20%\"\r\n                                    >\r\n                            </Field>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Quantity:</p>\r\n                                <Field name=\"quantity\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                placeholder='Quantity'\r\n                                                name='quantity'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonPart}>\r\n                        <p></p>\r\n                        <Button caption=\"Send\" type='submit'/>\r\n                        <Button caption=\"Close\" btnSelector=\"btnDisabled\" clicked={props.modalClosed}/>\r\n                    </div>\r\n            </form>\r\n        )}\r\n    />\r\n\r\n)\r\n\r\nexport default alphaExample;\r\n","import React from 'react';\r\nimport Button from '../../../ui/button/button';\r\nimport Input from '../../../ui/input/input';\r\nimport Select from '../../../ui/select/select';\r\nimport classes from '../Manual/manual.module.css';\r\nimport inputClasses from '../../../ui/input/input.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport MaskedInput from 'react-text-mask';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\r\n\r\nconst security = [\r\n    { value: 'Server unreachable', label: 'Server unreachable'}\r\n];\r\n\r\nconst internalCross = [\r\n    { value: 'Yes', label: 'Yes'},\r\n    { value: 'No', label: 'No'}\r\n];\r\n\r\nconst agression = [\r\n    { value: 'Low', label: 'Low'},\r\n    { value: 'Medium', label: 'Medium'},\r\n    { value: 'High', label: 'High'},\r\n    { value: 'Highest', label: 'Highest'}\r\n]\r\n\r\nconst onSubmit = (value) => {\r\n    console.log(value)\r\n}\r\n\r\nconst numberMask = createNumberMask({\r\n    prefix: '',\r\n    suffix: ''\r\n})\r\n\r\nconst priceMask = createNumberMask({\r\n    prefix: '$',\r\n    suffix: '',\r\n    allowDecimal: true,\r\n    decimalLimit: 5\r\n})\r\n\r\nconst required = value => (value ? undefined : 'Required')\r\n\r\nfunction selectComponentWrapper( props ) {\r\n    const {\r\n        input : { name, options, onChange, ...restInput},\r\n        meta,\r\n        ...rest\r\n    } = props;\r\n\r\n    return (<Select {...rest}\r\n                    className={classes.Select}\r\n                    options={props.options}\r\n                    name={props.name}\r\n                    changed={onChange}\r\n                    inputValue={props.inputValue}\r\n                    width={props.width}\r\n                    invalid={meta.error && meta.touched}\r\n                    containerWidth={props.containerWidth} />)\r\n}\r\n\r\nconst twap = ( props ) => (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, form, submitting, pristine, values}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                    <div className={classes.SelectPart} >\r\n                        <div className={classes.Row}>\r\n                        <Field name=\"security\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='security 1'\r\n                                    width='100%'\r\n                                    containerWidth=\"30%\"\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"account\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='account'\r\n                                    width='100%'\r\n                                    containerWidth='30%'\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"side\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='side'\r\n                                    width='100%'\r\n                                    containerWidth=\"20%\"\r\n                                    >\r\n                            </Field>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Quantity:</p>\r\n                                <Field name=\"quantity\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                placeholder='Quantity'\r\n                                                name='quantity'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Price:</p>\r\n                                <Field name=\"Price\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={priceMask}\r\n                                                placeholder='Price'\r\n                                                name='price'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>ValidSeconds:</p>\r\n                                <Field name=\"validSeconds\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                name='validSeconds'\r\n                                                placeholder='300'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>MinSize:</p>\r\n                                <Field name=\"minSize\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                name='minSize'\r\n                                                placeholder='0'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>MaxFloor:</p>\r\n                                <Field name=\"maxFloor\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                name='maxFloor'\r\n                                                placeholder='0'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>MaxPov:</p>\r\n                                <Field name=\"MaxPov\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                name='MaxPov'\r\n                                                placeholder='0'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                        <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Agression:</p>\r\n                                <Field name=\"agression\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={agression}\r\n                                    inputValue='side'\r\n                                    width='340%'\r\n                                    containerWidth=\"25%\"\r\n                                    >\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>InternalCross:</p>\r\n                                <Field name=\"internalCross\"\r\n                                        component={selectComponentWrapper}\r\n                                        options={internalCross}\r\n                                        inputValue='side'\r\n                                        width='340%'\r\n                                        containerWidth=\"25%\"\r\n                                        >\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonPart}>\r\n                        <Button caption=\"Send\" type='submit'/>\r\n                        <Button caption=\"Close\" btnSelector=\"btnDisabled\" clicked={props.modalClosed}/>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n)\r\n\r\nexport default twap;\r\n","import React, { Component } from 'react';\r\nimport Button from '../../../ui/button/button';\r\nimport Input from '../../../ui/input/input';\r\nimport Select from '../../../ui/select/select';\r\nimport classes from '../Manual/manual.module.css';\r\nimport inputClasses from '../../../ui/input/input.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport MaskedInput from 'react-text-mask';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\r\n\r\nconst security = [\r\n    { value: 'Server unreachable', label: 'Server unreachable'}\r\n];\r\n\r\nconst internalCross = [\r\n    { value: 'Yes', label: 'Yes'},\r\n    { value: 'No', label: 'No'}\r\n];\r\n\r\nconst agression = [\r\n    { value: 'Low', label: 'Low'},\r\n    { value: 'Medium', label: 'Medium'},\r\n    { value: 'High', label: 'High'},\r\n    { value: 'Highest', label: 'Highest'}\r\n\r\n]\r\n\r\nconst onSubmit = (value) => {\r\n    console.log(value)\r\n}\r\n\r\nconst numberMask = createNumberMask({\r\n    prefix: '',\r\n    suffix: ''\r\n})\r\n\r\nconst priceMask = createNumberMask({\r\n    prefix: '$',\r\n    suffix: '',\r\n    allowDecimal: true,\r\n    decimalLimit: 5\r\n})\r\n\r\nconst required = value => (value ? undefined : 'Required')\r\n\r\nfunction selectComponentWrapper( props ) {\r\n    const {\r\n        input : { name, options, onChange, ...restInput},\r\n        meta,\r\n        ...rest\r\n    } = props;\r\n\r\n    return (<Select {...rest}\r\n                    className={classes.Select}\r\n                    options={props.options}\r\n                    name={props.name}\r\n                    changed={onChange}\r\n                    inputValue={props.inputValue}\r\n                    width={props.width}\r\n                    invalid={meta.error && meta.touched}\r\n                    containerWidth={props.containerWidth} />)\r\n}\r\n\r\nconst twapPy = ( props ) => (\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, form, submitting, pristine, values}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className={classes.SelectPart} >\r\n                        <div className={classes.Row}>\r\n                        <Field name=\"security\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='security 1'\r\n                                    width='100%'\r\n                                    containerWidth=\"30%\"\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"account\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='account'\r\n                                    width='100%'\r\n                                    containerWidth='30%'\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"side\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='side'\r\n                                    width='100%'\r\n                                    containerWidth=\"20%\"\r\n                                    >\r\n                            </Field>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Quantity:</p>\r\n                                <Field name=\"quantity\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                placeholder='Quantity'\r\n                                                name='quantity'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Price:</p>\r\n                                <Field name=\"Price\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={priceMask}\r\n                                                placeholder='Price'\r\n                                                name='price'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>ValidSeconds:</p>\r\n                                <Field name=\"validSeconds\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                name='validSeconds'\r\n                                                placeholder='300'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>MinSize:</p>\r\n                                <Field name=\"minSize\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                name='minSize'\r\n                                                placeholder='0'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>MaxPov:</p>\r\n                                <Field name=\"MaxPov\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                name='MaxPov'\r\n                                                placeholder='0'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Agression:</p>\r\n                                <Field name=\"agression\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={agression}\r\n                                    inputValue='side'\r\n                                    width='340%'\r\n                                    containerWidth=\"25%\"\r\n                                    >\r\n                                </Field>\r\n                        </div>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>InternalCross:</p>\r\n                                <Field name=\"internalCross\"\r\n                                        component={selectComponentWrapper}\r\n                                        options={internalCross}\r\n                                        inputValue='side'\r\n                                        width='340%'\r\n                                        containerWidth=\"25%\"\r\n                                        >\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonPart}>\r\n                        <Button caption=\"Send\" type='submit'/>\r\n                        <Button caption=\"Close\" btnSelector=\"btnDisabled\" clicked={props.modalClosed}/>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n)\r\n\r\nexport default twapPy;\r\n","import React from 'react';\r\nimport Button from '../../../ui/button/button';\r\nimport Input from '../../../ui/input/input';\r\nimport Select from '../../../ui/select/select';\r\nimport classes from '../Manual/manual.module.css';\r\nimport inputClasses from '../../../ui/input/input.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport MaskedInput from 'react-text-mask';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\r\n\r\nconst security = [\r\n    { value: 'Server unreachable', label: 'Server unreachable'}\r\n];\r\n\r\nconst onSubmit = (value) => {\r\n    console.log(value)\r\n}\r\n\r\nconst numberMask = createNumberMask({\r\n    prefix: '',\r\n    suffix: ''\r\n})\r\n\r\nconst priceMask = createNumberMask({\r\n    prefix: '',\r\n    suffix: '',\r\n    allowDecimal: true,\r\n    decimalLimit: 5\r\n})\r\n\r\nconst required = value => (value ? undefined : 'Required')\r\n\r\nfunction selectComponentWrapper( props ) {\r\n    const {\r\n        input : { name, options, onChange, ...restInput},\r\n        meta,\r\n        ...rest\r\n    } = props;\r\n\r\n    return (<Select {...rest}\r\n                    className={classes.Select}\r\n                    options={props.options}\r\n                    name={props.name}\r\n                    changed={onChange}\r\n                    inputValue={props.inputValue}\r\n                    width={props.width}\r\n                    invalid={meta.error && meta.touched}\r\n                    containerWidth={props.containerWidth} />)\r\n}\r\n\r\nconst macrossing = ( props ) => (\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, form, submitting, pristine, values}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className={classes.SelectPart} >\r\n                        <div className={classes.Row}>\r\n                        <Field name=\"security\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='security 1'\r\n                                    width='100%'\r\n                                    containerWidth=\"30%\"\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"account\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='account'\r\n                                    width='100%'\r\n                                    containerWidth='30%'\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"side\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='side'\r\n                                    width='100%'\r\n                                    containerWidth=\"20%\"\r\n                                    >\r\n                            </Field>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Quantity 1:</p>\r\n                                <Field name=\"quantity1\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                placeholder='Quantity'\r\n                                                name='quantity1'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>SYMBOL LEG 2:</p>\r\n                                <Field name=\"symbolLeg2\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={false}\r\n                                                placeholder='Symbol leg 2'\r\n                                                name='symbolLeg2'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>ACCOUNT 2:</p>\r\n                                <Field name=\"accountInput2\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={false}\r\n                                                placeholder='Account 2'\r\n                                                name='accountInput2'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                        <Field name=\"security2\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='security 2'\r\n                                    width='100%'\r\n                                    containerWidth=\"30%\"\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"account2\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='account'\r\n                                    width='100%'\r\n                                    containerWidth='30%'\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"side2\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='side'\r\n                                    width='100%'\r\n                                    containerWidth=\"20%\"\r\n                                    >\r\n                            </Field>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Quantity 2:</p>\r\n                                <Field name=\"quantity2\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                placeholder='Quantity 2'\r\n                                                name='quantity2'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>SYMBOL LEG 3:</p>\r\n                                <Field name=\"symbolLeg3\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={false}\r\n                                                placeholder='Symbol leg 3'\r\n                                                name='symbolLeg3'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>ACCOUNT 3:</p>\r\n                                <Field name=\"accountInput3\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                placeholder='Account 3'\r\n                                                mask={false}\r\n                                                name='accountInput3'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                        <Field name=\"security3\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='security 3'\r\n                                    width='100%'\r\n                                    containerWidth=\"30%\"\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"account3\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='account'\r\n                                    width='100%'\r\n                                    containerWidth='30%'\r\n                                    >\r\n                            </Field>\r\n                            <Field name=\"side3\"\r\n                                    component={selectComponentWrapper}\r\n                                    validate={required}\r\n                                    options={security}\r\n                                    inputValue='side'\r\n                                    width='100%'\r\n                                    containerWidth=\"20%\"\r\n                                    >\r\n                            </Field>\r\n                        </div>\r\n                        <div className={classes.Row}>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>Quantity 3:</p>\r\n                                <Field name=\"quantity3\" validate={required}>\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={numberMask}\r\n                                                placeholder='Quantity 3'\r\n                                                name='quantity3'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>FastMA:</p>\r\n                                <Field name=\"FastMA\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={priceMask}\r\n                                                placeholder='FastMA'\r\n                                                name='price'\r\n                                                defaultValue='6'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                            <div className={classes.WrapTitle}>\r\n                                <p className={classes.Title}>SlowMA:</p>\r\n                                <Field name=\"SlowMA\">\r\n                                    {({ input, meta}) => (\r\n                                        <>\r\n                                        <MaskedInput {...input}\r\n                                                mask={priceMask}\r\n                                                placeholder='SlwoMA'\r\n                                                name='price'\r\n                                                defaultValue='24'\r\n                                                className={inputClasses.Input}\r\n                                                style={meta.error && meta.touched ? {border: '2px solid red'}  : null }\r\n                                                />\r\n                                        </>\r\n                                    )}\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonPart}>\r\n                        <Button caption=\"Send\" type='submit'/>\r\n                        <Button caption=\"Close\" btnSelector=\"btnDisabled\" clicked={props.modalClosed}/>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n)\r\n\r\nexport default macrossing;\r\n","import React, { Component } from 'react';\r\nimport Select from '../ui/select/select';\r\nimport classes from './placeOrder.module.css';\r\nimport GridLayout from 'react-grid-layout';\r\nimport Button from '../ui/button/button';\r\nimport Input from '../ui/input/input';\r\nimport Backdrop from '../ui/backdrop/backdrop';\r\nimport '../changePassword/changePassword.css';\r\nimport './Dragging.css';\r\nimport crossImage from '../../images/cross.svg';\r\nimport Manual from './Forms/Manual/manual';\r\nimport AlphaExample from './Forms/AplhaExample/alphaExample';\r\nimport Twap from './Forms/TWAP/twap';\r\nimport TwapPy from './Forms/TwapPy/twapPy';\r\nimport MACrossing from './Forms//MACrossing/macrossing';\r\n\r\nclass PlaceOrder extends Component {\r\n    state = {\r\n        styles : {border: ''},\r\n        errorMessage : '',\r\n        option: 'Manual'\r\n    }\r\n\r\n    options = [\r\n        { value: 'Manual', label: 'MANUAL' },\r\n        { value: 'MACrossing', label: 'MACrossing' },\r\n        { value: 'TWAP', label: 'TWAP' },\r\n        { value: 'AlphaExample', label: 'AlphaExample' },\r\n        { value: 'TwapPy', label: 'TwapPy' }\r\n    ];\r\n\r\n    layout = [\r\n        {i: 'a', x: 4, y: 0, w: 6 , h: 3, minW: 3.3, maxW: Infinity, minH: 2.9, maxH: Infinity}\r\n    ];\r\n\r\n    onSelectedChange = (data) => {\r\n        this.setState({option: data.value})\r\n    }\r\n\r\n    render() {\r\n        let optionRender = this.state.option;\r\n        if ( optionRender === 'Manual') {\r\n            optionRender = (\r\n                <Manual modalClosed={this.props.modalClosed}/>\r\n            )\r\n        }  else if ( optionRender === 'AlphaExample') {\r\n            optionRender = (\r\n                <AlphaExample modalClosed={this.props.modalClosed}/>\r\n            )\r\n        }  else if ( optionRender === 'TWAP') {\r\n            optionRender = (\r\n                <Twap modalClosed={this.props.modalClosed}/>\r\n            )\r\n        }  else if ( optionRender === 'TwapPy') {\r\n            optionRender = (\r\n                <TwapPy modalClosed={this.props.modalClosed}/>\r\n            )\r\n        } else if ( optionRender === 'MACrossing') {\r\n            optionRender = (\r\n                <MACrossing modalClosed={this.props.modalClosed}/>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n            <Backdrop show={this.props.show} />\r\n            <GridLayout className={classes.placeOrder}\r\n                        draggableHandle='.Handler'\r\n                        layout={this.layout}\r\n                        width={1200}\r\n                        verticalCompact={false}\r\n                        style={{\r\n                            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                            opacity: this.props.show ? '1' : '0',\r\n                            zIndex: '101'\r\n                        }}\r\n                        isResizable={true}>\r\n                <div key=\"a\" className={classes.Draggable}>\r\n                    <div className='Handler'>\r\n                        <div className={classes.Header}>\r\n                            <div className={classes.HeaderGroup}>\r\n                                <p>Algo: </p>\r\n                                    <Select options={this.options}\r\n                                            value={this.options}\r\n                                            changed={(data) => this.onSelectedChange(data)}\r\n                                            width='145%'\r\n                                            containerWidth='30%'/>\r\n                            </div>\r\n                            <img src={crossImage} alt='' onClick={this.props.modalClosed}/>\r\n                        </div>\r\n                    </div>\r\n                    {optionRender}\r\n                </div>\r\n            </GridLayout>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlaceOrder;","import React from 'react';\r\nimport classes from './treeview.module.css';\r\n\r\nconst treeview = ( props ) => {\r\n    return (\r\n        <>\r\n            <p className={classes.Caption} onClick={props.clicked}>{props.caption}</p>\r\n            <ul className={classes.List}>\r\n                {props.children}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default treeview;","import React, { PureComponent } from 'react';\r\nimport GridLayout from 'react-grid-layout';\r\nimport Backdrop from '../../ui/backdrop/backdrop';\r\nimport classes from './algoEditor.module.css';\r\nimport '../../changePassword/changePassword.css';\r\nimport crossImage from '../../../images/cross.svg';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport {Treebeard} from 'react-treebeard';\r\nimport SplitPane, { Pane } from 'react-split-pane';\r\nimport './splitPane.css';\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/theme-twilight\";\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\r\nimport Button from '../../ui/button/button';\r\nimport Input from '../../ui/input/input';\r\nimport CustomTreeview from '../../ui/treeview/treeview';\r\n\r\nclass AlgoEditor extends PureComponent {\r\n    state = {\r\n        debug: '',\r\n        filename: '',\r\n        files: ['twap.py'],\r\n        selectedFile: 'twap.py',\r\n        adding: false,\r\n        changed: false,\r\n        valueChanged: false,\r\n        value: '',\r\n        treeShow: true\r\n    }\r\n\r\n    layout = [\r\n        {i: 'a', x: 10, y: 0, w: 11, h: 4, minW: 10, maxW: Infinity, minH: 3.8, maxH: Infinity}\r\n    ];\r\n\r\n    onClicked = () => {\r\n        this.setState({debug: 'Server unreachable'});\r\n        console.log(this.state.files)\r\n    }\r\n\r\n    onAdding = () => {\r\n        this.setState({adding: true})\r\n    }\r\n\r\n    onCancelAdding = () => {\r\n        this.setState({adding: false})\r\n    }\r\n\r\n    onFileSubmit = () => {\r\n        let arr = this.state.files;\r\n        arr.push(this.state.filename)\r\n        this.setState({files: arr, adding: false, filename: '', changed: false});\r\n        localStorage.setItem('files', this.state.files)\r\n    }\r\n\r\n    onAddingChange = (e) => {\r\n        this.setState({changed: e.target.value})\r\n        this.setState({filename: e.target.value})\r\n    }\r\n\r\n    onChange = (value, callback) => {\r\n        this.setState({value: value})\r\n        if(this.state.value === localStorage.getItem('value')) {\r\n            this.setState({valueChanged: false})\r\n        } else\r\n            this.setState({valueChanged: true})\r\n        value = this.state.value;\r\n        callback(value);\r\n    }\r\n\r\n    onChangeSubmit = (value) => {\r\n        let promise = new Promise(( resolve ) => {\r\n            resolve(this.setState({value: value}));\r\n          });\r\n          promise.then (\r\n            result => localStorage.setItem('value', this.state.value)\r\n          )\r\n    }\r\n\r\n    onChangeRestore = (value) => {\r\n        this.setState({value: localStorage.getItem('value') || ''})\r\n    }\r\n\r\n    onTreeClicked = () => {\r\n        this.setState({treeShow: !this.state.treeShow})\r\n    }\r\n\r\n    onLoad = () => {\r\n        setTimeout(() => localStorage.getItem('value'), 0);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({value: localStorage.getItem('value') || ''})\r\n    }\r\n\r\n    onFileChanged = (name) => {\r\n        this.setState({selectedFile: name});\r\n    }\r\n\r\n    render() {\r\n        let adding = this.state.adding ? (\r\n            <div className={classes.Adding}>\r\n                <Input style={{width: '150px', marginRight: '10px'}} placeholder='Input filename here' changed={this.onAddingChange}/>\r\n                {this.state.changed ? <Button style={{marginRight: '10px'}} clicked={this.onFileSubmit} caption='Submit'/> : null}\r\n                <Button  caption='Cancel' clicked={this.onCancelAdding}/>\r\n            </div>\r\n        ) : null\r\n        let valueChanged = this.state.valueChanged ? (\r\n            <>\r\n                <Button className='NonDraggable' caption='Restore' btnSelector='btnDisabled' clicked={(value, onChangeSubmit) => this.onChange(null, this.onChangeRestore)}/>\r\n                <Button className='NonDraggable' caption='Save' clicked={(value, onChangeSubmit) => this.onChange(null, this.onChangeSubmit)}/>\r\n            </>\r\n        ) :\r\n        (\r\n            <Button className='NonDraggable' caption='TEST' clicked={this.onClicked}/>\r\n        )\r\n        return (\r\n            <>\r\n                <Backdrop show={this.props.show}/>\r\n                <GridLayout\r\n                    className={classes.AlgoEditor}\r\n                    layout={this.layout}\r\n                    width={1200}\r\n                    draggableHandle='.Handler'\r\n                    draggableCancel='.NonDraggable'\r\n                    verticalCompact={false}\r\n                    isResizable={true}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-150vh)',\r\n                        opacity: this.props.show ? '1' : '0',\r\n                        zIndex: \"101\"\r\n                    }}>\r\n                        <div key='a' className={classes.Wrapper}>\r\n                            <div className='Handler'>\r\n                                <div className={classes.Draggable}>\r\n                                    <div className={classes.DraggableWrapper}>\r\n                                        <div>\r\n                                            <h3>Algo Editor</h3>\r\n                                            <img className='NonDraggable' onClick={this.onAdding} src={crossImage} alt=''/>\r\n                                        </div>\r\n                                        {valueChanged}\r\n                                    </div>\r\n\r\n                                    <img src={crossImage} className='NonDraggable' alt='' onClick={this.props.modalClosed}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ContentWrapper}>\r\n                                <SplitPane\r\n                                    split='horizontal'\r\n                                    >\r\n                                    <SplitPane\r\n                                        split='vertical'\r\n                                        >\r\n                                        <div initialSize='200px' className={classes.Tree}>\r\n                                            <CustomTreeview clicked={this.onTreeClicked} caption='Python'>\r\n                                                {this.state.treeShow ? (this.state.files.map((file) => <li onClick={() => this.onFileChanged({file})}>{file}</li>)) : null}\r\n                                            </CustomTreeview>\r\n                                        </div>\r\n                                        <div className={classes.Editor}>\r\n                                            {adding}\r\n                                            <AceEditor\r\n                                                 placeholder=\"Placeholder Text\"\r\n                                                 mode=\"python\"\r\n                                                 theme=\"twilight\"\r\n                                                 name=\"blah2\"\r\n                                                 value={this.state.value}\r\n                                                 onLoad={this.onLoad}\r\n                                                 onChange={(value, callback) => this.onChange(value, () => null)}\r\n                                                 fontSize={14}\r\n                                                 showPrintMargin={true}\r\n                                                 showGutter={true}\r\n                                                 highlightActiveLine={true}\r\n                                                 setOptions={{\r\n                                                    enableBasicAutocompletion: true,\r\n                                                    enableLiveAutocompletion: true,\r\n                                                    enableSnippets: false,\r\n                                                    showLineNumbers: true,\r\n                                                    tabSize: 2,\r\n                                                 }}\r\n                                                width='100%'\r\n                                                height='700px'\r\n                                                />\r\n                                        </div>\r\n                                    </SplitPane>\r\n                                    <div initialSize='100px'  minSize='30px'>\r\n                                        {this.state.debug}\r\n                                    </div>\r\n                                </SplitPane>\r\n                            </div>\r\n\r\n                        </div>\r\n                </GridLayout>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlgoEditor;","import React, { PureComponent } from 'react';\r\nimport GridLayout from 'react-grid-layout';\r\nimport Backdrop from '../../ui/backdrop/backdrop';\r\nimport classes from '../algoEditor/algoEditor.module.css';\r\nimport '../../changePassword/changePassword.css';\r\nimport crossImage from '../../../images/cross.svg';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport {Treebeard} from 'react-treebeard';\r\nimport SplitPane, { Pane } from 'react-split-pane';\r\nimport '../algoEditor/splitPane.css';\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/theme-twilight\";\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\r\nimport Button from '../../ui/button/button';\r\nimport Input from '../../ui/input/input';\r\nimport CustomTreeview from '../../ui/treeview/treeview';\r\n\r\nclass AlgoEditor extends PureComponent {\r\n    state = {\r\n        debug: '',\r\n        filename: '',\r\n        files: ['tempalate.ini'],\r\n        selectedFile: 'twap.py',\r\n        adding: false,\r\n        changed: false,\r\n        valueChanged: false,\r\n        value: '',\r\n        treeShow: true\r\n    }\r\n\r\n    layout = [\r\n        {i: 'a', x: 10, y: 0, w: 11, h: 4, minW: 10, maxW: Infinity, minH: 3.8, maxH: Infinity}\r\n    ];\r\n\r\n    onClicked = () => {\r\n        this.setState({debug: 'Server unreachable'});\r\n        console.log(this.state.files)\r\n    }\r\n\r\n    onAdding = () => {\r\n        this.setState({adding: true})\r\n    }\r\n\r\n    onCancelAdding = () => {\r\n        this.setState({adding: false})\r\n    }\r\n\r\n    onFileSubmit = () => {\r\n        let arr = this.state.files;\r\n        arr.push(this.state.filename)\r\n        this.setState({files: arr, adding: false, filename: '', changed: false});\r\n        localStorage.setItem('files', this.state.files)\r\n\r\n    }\r\n\r\n    onAddingChange = (e) => {\r\n        this.setState({changed: e.target.value})\r\n        this.setState({filename: e.target.value})\r\n    }\r\n\r\n    onChange = (value, callback) => {\r\n        this.setState({value: value})\r\n        if(this.state.value === localStorage.getItem('riskValue')) {\r\n            this.setState({valueChanged: false})\r\n        } else\r\n            this.setState({valueChanged: true})\r\n        value = this.state.value;\r\n        callback(value);\r\n    }\r\n\r\n    onChangeSubmit = (value) => {\r\n        let promise = new Promise(( resolve ) => {\r\n            resolve(this.setState({value: value}));\r\n          });\r\n          promise.then (\r\n            result => localStorage.setItem('riskValue', this.state.value)\r\n          )\r\n    }\r\n\r\n    onChangeRestore = (value) => {\r\n        this.setState({value: localStorage.getItem('riskValue') || ''})\r\n    }\r\n\r\n    onTreeClicked = () => {\r\n        this.setState({treeShow: !this.state.treeShow})\r\n    }\r\n\r\n    onLoad = () => {\r\n        setTimeout(() => localStorage.getItem('riskValue'), 0);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({value: localStorage.getItem('riskValue') || ''})\r\n    }\r\n\r\n    onFileChanged = (name) => {\r\n        this.setState({selectedFile: name});\r\n    }\r\n\r\n    render() {\r\n        let adding = this.state.adding ? (\r\n            <div className={classes.Adding}>\r\n                <Input style={{width: '150px', marginRight: '10px'}} placeholder='Input filename here' changed={this.onAddingChange}/>\r\n                {this.state.changed ? <Button style={{marginRight: '10px'}} clicked={this.onFileSubmit} caption='Submit'/> : null}\r\n                <Button  caption='Cancel' clicked={this.onCancelAdding}/>\r\n            </div>\r\n        ) : null\r\n        let valueChanged = this.state.valueChanged ? (\r\n            <>\r\n                <Button className='NonDraggable' caption='Restore' btnSelector='btnDisabled' clicked={(value, onChangeSubmit) => this.onChange(null, this.onChangeRestore)}/>\r\n                <Button className='NonDraggable' caption='Save' clicked={(value, onChangeSubmit) => this.onChange(null, this.onChangeSubmit)}/>\r\n            </>\r\n        ) :\r\n        (\r\n            null\r\n        )\r\n        return (\r\n            <>\r\n                <Backdrop show={this.props.show}/>\r\n                <GridLayout\r\n                    className={classes.AlgoEditor}\r\n                    layout={this.layout}\r\n                    width={1200}\r\n                    draggableHandle='.Handler'\r\n                    draggableCancel='.NonDraggable'\r\n                    verticalCompact={false}\r\n                    isResizable={true}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-150vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                        <div key='a' className={classes.Wrapper}>\r\n                            <div className='Handler'>\r\n                                <div className={classes.Draggable}>\r\n                                    <div className={classes.DraggableWrapper}>\r\n                                        <div>\r\n                                            <h3>Risk Editor</h3>\r\n                                            <img className='NonDraggable' onClick={this.onAdding} src={crossImage} alt=''/>\r\n                                        </div>\r\n                                        {valueChanged}\r\n                                    </div>\r\n\r\n                                    <img src={crossImage} className='NonDraggable' alt='' onClick={this.props.modalClosed}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ContentWrapper}>\r\n                                {/* <SplitPane\r\n                                    split='horizontal'\r\n                                    > */}\r\n                                    <SplitPane\r\n                                        split='vertical'\r\n                                        >\r\n                                        <div initialSize='200px' className={classes.Tree}>\r\n                                            <CustomTreeview clicked={this.onTreeClicked} caption='Risk'>\r\n                                                {this.state.treeShow ? (this.state.files.map((file) => <li onClick={() => this.onFileChanged({file})}>{file}</li>)) : null}\r\n                                            </CustomTreeview>\r\n                                        </div>\r\n                                        <div className={classes.Editor}>\r\n                                            {adding}\r\n                                            <AceEditor\r\n                                                 placeholder=\"Placeholder Text\"\r\n                                                 mode=\"python\"\r\n                                                 theme=\"twilight\"\r\n                                                 name=\"blah2\"\r\n                                                 value={this.state.value}\r\n                                                 onLoad={this.onLoad}\r\n                                                 onChange={(value, callback) => this.onChange(value, () => null)}\r\n                                                 fontSize={14}\r\n                                                 showPrintMargin={true}\r\n                                                 showGutter={true}\r\n                                                 highlightActiveLine={true}\r\n                                                 setOptions={{\r\n                                                    enableBasicAutocompletion: true,\r\n                                                    enableLiveAutocompletion: true,\r\n                                                    enableSnippets: false,\r\n                                                    showLineNumbers: true,\r\n                                                    tabSize: 2,\r\n                                                 }}\r\n                                                width='100%'\r\n                                                height='700px'\r\n                                                />\r\n                                        </div>\r\n                                    </SplitPane>\r\n                                    {/* <div initialSize='100px'  minSize='30px'>\r\n                                        {this.state.debug}\r\n                                    </div>\r\n                                </SplitPane> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                </GridLayout>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlgoEditor;","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport '../select/Select.css';\r\n\r\nconst select = ( props ) => {\r\n    let options = props.options;\r\n\r\n    const customStyles = {\r\n        container: () => ({\r\n            width: props.containerWidth,\r\n            marginRight: 0\r\n        }),\r\n        control: (provided, {isFocused, isSelected, isHovered}) => ({\r\n            width: props.width,\r\n            background: \"url(\" + props.background + \")\",\r\n            height: \"20px\",\r\n            opacity: '0',\r\n            border: isFocused ? \"2px solid #20a8d8\" : props.invalid ? \"2px solid red\" : \"2px solid #37373c\" ,\r\n            borderRadius: \"5px\",\r\n            transition: \"0.2s ease\",\r\n            backgroundColor: \"#202028\",\r\n            color: \"#22ADF6\",\r\n            fontSize: \"12px\",\r\n            cursor: \"pointer\",\r\n            padding: \"5px\",\r\n            display: 'flex',\r\n            boxShadow: isFocused ? \"0px 0px 15px #20a8d8\" : null\r\n        }),\r\n        singleValue: () => ({\r\n            color: \"#22ADF6\",\r\n            marginBottom: 5\r\n        }),\r\n        indicatorSeparator: () => ({\r\n            border: 'none'\r\n        }),\r\n        menuList: () => ({\r\n            padding: 0.5,\r\n            borderRadius: 5,\r\n        }),\r\n        menu: () => ({\r\n            width: props.menuWidth,\r\n            zIndex: '200',\r\n            marginLeft: -200,\r\n            borderRadius: \"5px\",\r\n            position: 'absolute',\r\n            color: \"white\",\r\n            background: \"rgb(34,173,246)\",\r\n            background: \"linear-gradient(90deg, rgba(34,173,246,1) 0%, rgba(93,193,246,1) 100%)\"\r\n        }),\r\n        option: () => ({\r\n            color: \"white\",\r\n\r\n            background: \"rgb(34,173,246)\",\r\n            background: \"linear-gradient(90deg, rgba(34,173,246,1) 0%, rgba(93,193,246,1) 100%)\",\r\n            textAlign: 'left',\r\n            fontSize: 14,\r\n            padding: \"10px 20px\",\r\n            fontWeigt: 'regular '\r\n        }),\r\n        placeholder: () => ({\r\n            color: \"#555555\",\r\n            marginBottom: 5\r\n        }),\r\n        group: () => ({\r\n            background: \"rgb(34,173,246)\",\r\n            background: \"linear-gradient(90deg,  rgba(93,193,246,1) 0%,rgba(93,193,246,1) 100%)\"\r\n        }),\r\n        groupHeading: () => ({\r\n            height: 39,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            color: 'white',\r\n            background: \"rgb(34,173,246)\",\r\n            background: \"linear-gradient(90deg,  rgba(93,193,246,1) 0%,rgba(93,193,246,1) 100%)\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Select options={options}\r\n                name={props.name}\r\n                styles={customStyles}\r\n                style={props.style}\r\n                className='react-select-container'\r\n                classNamePrefix=\"react-select\"\r\n                defaultValue={props.value}\r\n                placeholder={props.inputValue}\r\n                onChange={props.changed}\r\n                {...select}/>\r\n    )\r\n}\r\n\r\nexport default select;","import React, { Component } from 'react';\r\nimport classes from './header.module.css'\r\nimport bellImage from '../../../images/bell.svg';\r\nimport settingsImage from '../../../images/settings.svg';\r\nimport editorImage from '../../../images/editor.svg';\r\nimport Button from '../button/button';\r\nimport Select from '../iconSelect/iconSelect';\r\n\r\nclass Header extends Component{\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    options = [\r\n        {value: 'ChangePassword', label: 'Change My Password'},\r\n        {value: 'Users', label: 'Users'},\r\n        {value: 'Broker accounts', label: 'Broker accounts'},\r\n        {value: 'Sub accounts', label: 'Sub accounts'},\r\n        {value: 'Exchanges', label: 'Exchanges'},\r\n        {value: 'Sub accounts of user', label: 'Sub accounts of user'},\r\n        {value: 'Broker accounts of sub account', label: 'Broker accounts of sub account'},\r\n    ]\r\n\r\n    exchanges = [\r\n        {value: 'ecms', label: 'ec_ms'},\r\n        {value: 'ecsim', label: 'ec_sim'},\r\n        {value: 'eckgi', label: 'ec_kgi'},\r\n    ]\r\n\r\n    datas = [\r\n        {value: 'CONS', label: 'CONS'},\r\n        {value: 'mdms', label: 'md_ms'},\r\n        {value: 'mdsim', label: 'md_sim'},\r\n        {value: 'mdkgi', label: 'md_kgi'},\r\n    ]\r\n\r\n    groupedOptions = [\r\n        {\r\n            label: 'Exchanges',\r\n            options: this.exchanges\r\n        },\r\n        {\r\n            label: 'Datas',\r\n            options: this.datas\r\n        }\r\n    ]\r\n\r\n    onSelectedChange = (data) => {\r\n        let promise = new Promise((resolve) => {\r\n            resolve(this.setState({value: data.value}));\r\n        });\r\n        promise.then (\r\n            result => {\r\n                if (this.state.value === 'ChangePassword') {\r\n                    this.props.changeClicked()\r\n                } else this.props.alertClicked()\r\n            }\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={classes.Header}>\r\n                <div className={classes.Left}>\r\n                    <div className={classes.Sandwich} onClick={this.props.sidedrawerClicked}>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                    <h1>{this.props.caption}</h1>\r\n                </div>\r\n                <div className={classes.Right}>\r\n                    <div className={classes.Settings}>\r\n                        <img src={settingsImage} alt=''/>\r\n                        <div className={classes.Select}>\r\n                            <Select\r\n                                background={settingsImage}\r\n                                width='0px'\r\n                                menuWidth='240px'\r\n                                options={this.options}\r\n                                changed={(data)=>this.onSelectedChange(data)} />\r\n                        </div>\r\n                    </div>\r\n                    <Button caption='Place Order' clicked={this.props.clicked} style={{width: '100px'}}/>\r\n                    <img src={editorImage} alt='' onClick={this.props.algoClicked}/>\r\n                    <div className={classes.Settings}>\r\n                        <img src={bellImage} alt=''/>\r\n                        <div className={classes.Select}>\r\n                            <Select\r\n                                background={bellImage}\r\n                                width='0px'\r\n                                menuWidth='240px'\r\n                                options={this.groupedOptions}\r\n                                changed={(data)=>this.onSelectedChange(data)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport classes from './sidedrawer.module.css';\r\nimport crossImage from '../../../images/cross.svg';\r\nimport dashImage from '../../../images/dash.svg';\r\nimport shieldImage from '../../../images/shield.svg';\r\nimport arrowImage from '../../../images/arrow.svg';\r\nimport wandImage from '../../../images/wand.svg';\r\nimport manImage from '../../../images/man.svg';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Sidedrawer extends Component {\r\n    state = {\r\n        opened: false,\r\n        visible: this.props.showSidedrawer,\r\n        userClicked: false,\r\n        themeClicked: false\r\n    }\r\n\r\n    openHandler = () => {\r\n        this.setState({opened: !this.state.opened, userClicked: false, themeClicked: false});\r\n        setTimeout(() => localStorage.setItem('SideDrawerOpen', this.state.opened), 0);\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 200);\r\n\r\n    }\r\n\r\n    userHandler = () => {\r\n        this.setState({userClicked: !this.state.userClicked})\r\n    }\r\n\r\n    themeHandler = () => {\r\n        this.setState({themeClicked: !this.state.themeClicked})\r\n    }\r\n\r\n    visibleHandler = () => {\r\n        this.setState({visible: !this.state.visible})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div className={classes.Sidedrawer} style={{width: this.state.opened ? '200px' : '50px', transform: this.props.showSidedrawer ? 'translateX(0)' : 'translateX(-50px)'}}>\r\n                    <Link to='/dashboard' style={{textDecoration: 'none'}}>\r\n                        <div className={this.state.opened ? classes.ButtonWrapperOpen : classes.ButtonWrapper} style={{width: this.state.opened ? '200px' : '50px'}}>\r\n                            <img src={dashImage} alt=''/>\r\n                            <div >Dashboard</div>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to='/risk' style={{textDecoration: 'none'}}>\r\n                        <div className={this.state.opened ? classes.ButtonWrapperOpen : classes.ButtonWrapper} style={{width: this.state.opened ? '200px' : '50px'}} >\r\n                            <img src={shieldImage} alt=''/>\r\n                            <div>Risk</div>\r\n                        </div>\r\n                    </Link>\r\n                    <div className={classes.ControlWrapper}>\r\n                        <div className={this.state.opened ? classes.ButtonWrapperOpen : classes.ButtonWrapper}\r\n                            style={{width: this.state.opened ? '200px' : '50px'}}\r\n                            onClick={this.userHandler}>\r\n                            <img src={manImage} alt='' style={{marginTop : this.state.userClicked ? '-50px' : null}}/>\r\n                            <div>\r\n                                <p className={classes.Caption} style={{margin: this.state.userClicked ? '10px 0' : null}}>User</p>\r\n                                <div className={classes.Control} style={{display: this.state.opened ? 'none' : 'block',\r\n                                                                        display: this.state.userClicked ? 'block' : 'none',\r\n                                                                        position: this.state.userClicked ? 'static' : null,\r\n                                                                        margin: this.state.userClicked ? '0' : null,\r\n                                                                        height: this.state.userClicked ? '45px' : null,\r\n                                                                        paddingTop : this.state.userClicked ? '10px': null\r\n                                                                            }}>\r\n                                    <p>Log-out</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={this.state.opened ? classes.ButtonWrapperOpen : classes.ButtonWrapper}\r\n                            style={{width: this.state.opened ? '200px' : '50px'}}\r\n                            onClick={this.themeHandler}>\r\n                            <img src={wandImage} alt='' style={{marginTop : this.state.themeClicked ? '-50px' : null}}/>\r\n                            <div style={{height: this.state.themeClicked ? '90px' : null}}>\r\n                                <p className={classes.Caption} style={{margin: this.state.themeClicked ? '10px 0' : null}}>Theme</p>\r\n                                <div className={classes.Control} style={{display: this.state.opened ? 'none' : 'block',\r\n                                                                        display: this.state.themeClicked ? 'block' : null,\r\n                                                                        position: this.state.themeClicked ? 'static' : null,\r\n                                                                        margin: this.state.themeClicked ? '0' : null,\r\n                                                                        height: this.state.themeClicked ? '45px' : null,\r\n                                                                        paddingTop : this.state.themeClicked ? '10px': null\r\n                                                                            }}>\r\n                                    <p>Light Dark</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.Expand} onClick={this.openHandler} style={{width: this.state.opened ? '200px' : '50px'}}>\r\n                            <img src={arrowImage} alt='' style={{transition: '0.3s ease-in', transform: this.state.opened ? 'rotate(180deg)' : 'rotate(0deg)'}}/>\r\n                        </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidedrawer;","import React from 'react';\r\nimport DataGrid, {valueCellContentRenderer} from 'react-data-grid';\r\nimport Wrapper from '../Wrapper.js';\r\nimport classes from './overview.module.css';\r\nimport './grid.css';\r\n\r\nconst defaultColumnProperties = {\r\n resizable: true,\r\n width: 140\r\n};\r\n\r\nconst defaultRowProperties = {\r\n height: 57\r\n}\r\n\r\nconst columns = [\r\n {key: 'Acc', name: 'Acc/Symbol/Algo'},\r\n {key: 'State', name: 'State'},\r\n {key: 'Time0', name: 'Time0'},\r\n {key: 'Time', name: 'Time'},\r\n {key: 'Bought', name: 'Bought'},\r\n {key: 'Working', name: 'Working'},\r\n {key: 'Position', name: 'Position'},\r\n {key: 'Sold', name: 'Sold'},\r\n {key: 'Desire', name: 'Desire'},\r\n {key: 'Desc', name: 'Desc'}\r\n].map( c => ({ ...c, ...defaultColumnProperties}));\r\n\r\nconst rows = [\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n {Acc: 'Some Data', State: 'Some Data', Time0: 'Some Data', Time: 'Some Data', Bought: 'Some Data', Working: 'Some Data', Position: 'Some Data', Sold: 'Some Data', Desire: 'Some Data', Desc: 'Some Data'},\r\n].map( r => ({ ...r, ...defaultRowProperties}));\r\n\r\nconst cell = {\r\n height: 27\r\n}\r\n\r\nconst onWidthChanged = () => {\r\n console.log('smthng')\r\n window.dispatchEvent(new Event('resize'));\r\n}\r\n\r\nconst overview = ( props ) => {\r\n return (\r\n\r\n   <DataGrid\r\n     columns={columns}\r\n     onWidthChanged={onWidthChanged}\r\n     rowGetter={i => rows[i]}\r\n     rowsCount={15}\r\n     rowHeight={27}\r\n     minHeight={50}\r\n     defaultCellContentRenderer={valueCellContentRenderer}\r\n     ></DataGrid>\r\n\r\n);\r\n}\r\n\r\n\r\nexport default overview;","import React, { Component } from 'react';\r\nimport ChangePassword from '../../components/changePassword/changePassword';\r\nimport PlaceOrder from '../../components/placeOrder/placeOrder';\r\nimport AlgoEditor from '../../components/editors/algoEditor/algoEditor';\r\nimport RiskEditor from '../../components/editors/riskEditor/riskEditor';\r\nimport Button from '../../components/ui/button/button';\r\nimport Header from  '../../components/ui/header/header';\r\nimport Sidedrawer from '../../components/ui/sidedrawer/sidedrawer';\r\nimport RGL, { WidthProvider } from 'react-grid-layout';\r\nimport { Grid } from '@material-ui/core';\r\nimport classes from './dashboard.module.css';\r\nimport gridLayout from '../../components/grids/gridLayout/gridLayout';\r\nimport './Dragging.css';\r\nimport Overview from '../../components/grids/overview/overview';\r\nimport Select from '../../components/ui/select/select';\r\n// import Pl from '../../components/grids//PL/PL';\r\n\r\nconst GridLayout = WidthProvider(RGL);\r\n\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        showPlaceOrder: false,\r\n        showChangePassword: false,\r\n        showAlgo: false,\r\n        showRisk: false,\r\n        showSidedrawer: true\r\n    }\r\n\r\n    placeOrderHandler = () => {\r\n        this.setState({showPlaceOrder: true})\r\n    }\r\n\r\n    changePasswordHandler = () => {\r\n        this.setState({showChangePassword: true})\r\n    }\r\n\r\n    algoHandler = () => {\r\n        this.setState({showAlgo: true})\r\n    }\r\n\r\n    riskHandler = () => {\r\n        this.setState({showRisk: true})\r\n    }\r\n\r\n    showSidedrawerHandler = () => {\r\n        if (localStorage.getItem('SideDrawerOpen') === 'true') {\r\n            return;\r\n        } else {\r\n            this.setState({showSidedrawer: !this.state.showSidedrawer});\r\n            setTimeout(() => window.dispatchEvent(new Event('resize')),100);\r\n            this.onWidthChanged();\r\n        }\r\n    }\r\n\r\n    kek = () => {\r\n        alert('kek')\r\n    }\r\n\r\n    modalClosedHandler = () => {\r\n        this.setState({showPlaceOrder: false, showChangePassword: false, showAlgo: false, showRisk: false})\r\n    }\r\n\r\n    alertClickedHandler = () => {\r\n        alert('admin required')\r\n    }\r\n\r\n    layout = [\r\n        {i: 'a', x: 0, y: 0, w: 5 , h: 4, minW: 1, maxW: Infinity, minH: 0.5, maxH: Infinity},\r\n        {i: 'b', x: 5, y: 0, w: 7 , h: 4, minW: 1, maxW: Infinity, minH: 0.5, maxH: Infinity},\r\n        {i: 'c', x: 0, y: 2, w: 2 , h: 4, minW: 1, maxW: Infinity, minH: 0.5, maxH: Infinity},\r\n        {i: 'd', x: 2, y: 2, w: 4 , h: 4, minW: 1, maxW: Infinity, minH: 0.5, maxH: Infinity},\r\n        {i: 'e', x: 6, y: 2, w: 6 , h: 4, minW: 1, maxW: Infinity, minH: 0.5, maxH: Infinity},\r\n    ]\r\n\r\n    onWidthChanged = () => {\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 0)\r\n        setTimeout(() => window.dispatchEvent(new Event('resize')), 200)\r\n    }\r\n\r\n    options = [\r\n     {value: 'TF', label: 'TF'},\r\n     {value: 'HG', label: 'HG'},\r\n     {value: 'SIM', label: 'SIM'},\r\n     {value: 'cpt_test', label: 'cpt_test'},\r\n     {value: 'MS', label: 'MS'},\r\n     {value: 'KGI', label: 'KGI'}\r\n    ]\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header caption='Dashboard'\r\n                    clicked={this.placeOrderHandler}\r\n                    sidedrawerClicked={this.showSidedrawerHandler}\r\n                    changeClicked={this.changePasswordHandler}\r\n                    alertClicked={this.alertClickedHandler}\r\n                    algoClicked={this.algoHandler}/>\r\n                <div className='grid'>\r\n                    <Sidedrawer showSidedrawer={this.state.showSidedrawer}/>\r\n                    <div className='tables' style={{transform: this.state.showSidedrawer ? 'translateX(0)' : 'translateX(-50px)',\r\n                                                    transition: '0.3s ease-out',\r\n                                                    height: this.state.showSidedrawer ? null : '100%',\r\n                                                    position: this.state.showSidedrawer ? null : 'absolute',\r\n                                                    left: this.state.showSidedrawer ? null : '50px',\r\n                                                    width: this.state.showSidedrawer ? '100%' : 'calc(100% + 50px)'}}>\r\n                        <GridLayout\r\n                                cols={12}\r\n                                rowHeight={100}\r\n                                onResizeStop={this.onWidthChanged}\r\n                                useCSSTransforms={false}\r\n                                draggableHandle='.DragHandle'\r\n                                layout={this.layout}>\r\n                                    <div className={classes.Placeholder} key='c'></div>\r\n                                    <div className={classes.Placeholder} key='a'>\r\n                                      <div className='DragHandle'>\r\n                                        <p>Overview</p>\r\n                                        <Select\r\n                                         options={this.options}\r\n                                         isMulti\r\n                                         inputValue='choose interested accounts'\r\n                                         width='100%'\r\n                                         containerWidth='70%'/>\r\n                                      </div>\r\n                                       <Overview/>\r\n                                     </div>\r\n                                    <div className={classes.Placeholder} key='b'>MarketWatch</div>\r\n                                    <div className={classes.Placeholder} key='d'>PL</div>\r\n                                    <div className={classes.Placeholder} key='e'>lastGrid</div>\r\n                        </GridLayout>\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <Pl/> */}\r\n                {/* <Button caption='Change password' clicked={this.changePasswordHandler}/> <br/>\r\n                <Button caption='Algo' clicked={this.algoHandler} />\r\n                <Button caption='Risk' clicked={this.riskHandler} /> */}\r\n                <PlaceOrder show={this.state.showPlaceOrder} modalClosed={this.modalClosedHandler}/>\r\n                <ChangePassword show={this.state.showChangePassword} modalClosed={this.modalClosedHandler}/>\r\n                <AlgoEditor show={this.state.showAlgo} modalClosed={this.modalClosedHandler}/>\r\n                <RiskEditor show={this.state.showRisk} modalClosed={this.modalClosedHandler}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport classes from './input.module.css';\r\n\r\n\r\nconst input = ( props ) => {\r\n    return (\r\n        <div className={classes.InputBox}>\r\n            <img src={props.img} alt=''/>\r\n            <input onChange={props.changed} value={props.value} className={classes.Input} placeholder={props.placeholder} type={props.type} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport Input from '../../components/ui/loginInput/input';\r\nimport Button from '../../components/ui/button/button';\r\nimport classes from './login.module.css';\r\nimport manImage from '../../images/man.svg';\r\nimport lockImage from '../../images/lock.svg';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        valid: false,\r\n        errormessage: 'Server unreachable'\r\n    }\r\n\r\n    userInputHandler = (event) => {\r\n        this.setState({username : event.target.value});\r\n        this.buttonClicked();\r\n    }\r\n\r\n    passwordInputHandler = (event) => {\r\n        this.setState({password : event.target.value});\r\n        this.buttonClicked();\r\n    }\r\n\r\n    buttonClicked = () => {\r\n        setTimeout(() => {\r\n            if(this.state.username === 'test' && this.state.password === 'test')\r\n                this.setState({valid: true});\r\n            else {\r\n                this.setState({valid: false});\r\n            }\r\n            }, 0);\r\n    }\r\n\r\n    errorHandler = () => {\r\n        setTimeout(() => {\r\n                this.setState({errormessage: 'Unknown username or password'})\r\n            }, 0);\r\n    }\r\n\r\n    render() {\r\n        let button = this.state.username === '' || this.state.password === '' ? true : false;\r\n        let pass = this.state.valid ? (<Button clicked={this.props.clicked} caption=\"Login\" disabled={button}/>)\r\n                                    : (<Button clicked={this.errorHandler} caption=\"Login\" disabled={button}/>)\r\n        return (\r\n            <div data-theme={this.props.dataTheme} className={classes.Login} >\r\n                <h1>Login</h1>\r\n                <p>Sing in to your account</p>\r\n                <p>Username/password: <span className={classes.YellowText}>test/test</span></p>\r\n                <Input changed={this.userInputHandler} img={manImage} placeholder='Username' type='text' value={this.state.value}/>\r\n                <Input changed={this.passwordInputHandler} img={lockImage} value={this.state.value} placeholder='Password' type='password'/>\r\n                {pass}\r\n                <p>{this.state.errormessage}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\nclass Risk extends Component {\r\n    render() {\r\n        return (\r\n            <p>risk</p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Risk;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Layout from './components/layout/layout';\nimport Dashboard from './containers/dashboard/dashboard';\nimport Login from './containers/login/login';\nimport Risk from './containers/risk/risk';\n\nclass App extends Component {\n  state = {\n    isLogged: false\n  }\n\n  componentDidMount() {\n    const isLogged = JSON.parse(localStorage.getItem('isLogged'));\n    console.log(isLogged)\n    this.setState({isLogged : isLogged});\n  }\n\n  onLoginPass = () => {\n    let promise = new Promise(( resolve ) => {\n      resolve(this.setState({isLogged: true}));\n    });\n    promise.then (\n      result => localStorage.setItem('isLogged', this.state.isLogged)\n    )\n  }\n\n  onLogout = () => {\n    let promise = new Promise(( resolve ) => {\n      resolve(this.setState({isLogged: false}));\n    });\n    promise.then (\n      result => localStorage.setItem('isLogged', this.state.isLogged)\n    )\n  }\n\n  render () {\n    let login = (<Login clicked={this.onLoginPass}/>);\n    let redirect = this.state.isLogged ?\n        (\n          <>\n            <Route path='/dashboard' component={Dashboard}/>\n            <Route path='/login'><Redirect to='/dashboard'/></Route>\n            <Route path='/risk' component={Risk}/>\n            <Route path='/' exact>\n              <Redirect to='/dashboard'/>\n            </Route>\n            {/* <button onClick={this.onLogout}>Log Out</button> */}\n          </>\n        )\n      : (\n          <>\n            <Route path='/login'>{login}</Route>\n            <Route path='/dashboard'>\n              <Redirect to='/login'/>\n            </Route>\n            <Route path='/risk'>\n              <Redirect to='/login'/>\n            </Route>\n            <Route path='/' exact>\n              <Redirect to='/login'/>\n            </Route>\n          </>\n        )\n      ;\n    return (\n      <Layout>\n        <BrowserRouter>\n          <Switch>\n            {redirect}\n          </Switch>\n        </BrowserRouter>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Placeholder\":\"dashboard_Placeholder__2puLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Placeholder\":\"gridLayout_Placeholder__3Y59O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlaceOrder\":\"placeOrder_PlaceOrder__nXcX2\",\"Draggable\":\"placeOrder_Draggable__2DhAc\",\"Header\":\"placeOrder_Header__1xGj5\",\"SelectPart\":\"placeOrder_SelectPart__2SJ-d\",\"Error\":\"placeOrder_Error__r1z7M\",\"Input\":\"placeOrder_Input__D19Lo\",\"ButtonPart\":\"placeOrder_ButtonPart__3AKhC\",\"HeaderGroup\":\"placeOrder_HeaderGroup__3lklY\",\"Row\":\"placeOrder_Row__3MQN7\",\"WrapTitle\":\"placeOrder_WrapTitle__jMH0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"login_Login___caPf\",\"YellowText\":\"login_YellowText__3qZ2T\"};","module.exports = __webpack_public_path__ + \"static/media/man.cc63ee86.svg\";"],"sourceRoot":""}